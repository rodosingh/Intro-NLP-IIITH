from tqdm import tqdm
import sys

DATA_DIR = sys.argv[1] # "../DATA_SemEval2018-Task9/"
TRAIN_HYPO_FILENAME = "training/data/{}.training.data.txt".format(sys.argv[2])
TRAIN_HYPER_FILENAME = "training/gold/{}.training.gold.txt".format(sys.argv[2])

TEST_HYPO_FILENAME = "test/data/{}.test.data.txt".format(sys.argv[2])
TEST_HYPER_FILENAME = "test/gold/{}.test.gold.txt".format(sys.argv[2])

print("CURRENT DATA_PATH: {} and TRAIN HYPO files: {}".format(DATA_DIR, TRAIN_HYPO_FILENAME))

OUT_TRAIN_DATA_FILENAME = "sampledata.txt"
OUT_TEST_FILENAME = "sampletest.txt"
OUT_TARGETS_FILENAME = "gold.txt"

train_hypos = open(DATA_DIR + TRAIN_HYPO_FILENAME, "r")
train_hypo_lines = train_hypos.readlines()
train_hypos.close()

test_hypos = open(DATA_DIR + TEST_HYPO_FILENAME)
test_hypo_lines = test_hypos.readlines()
test_hypos.close()

train_hyper = open(DATA_DIR + TRAIN_HYPER_FILENAME, "r")
train_hyper_lines = train_hyper.readlines()
train_hyper.close()

test_hyper = open(DATA_DIR + TEST_HYPER_FILENAME, "r")
test_hyper_lines = test_hyper.readlines()
test_hyper.close()

train_data = open(OUT_TRAIN_DATA_FILENAME, "w")
for ndx, hypo in tqdm(enumerate(train_hypo_lines)):
    hypo = hypo.strip()
    hypo = hypo.split("\t")[0]
    hypo = '_'.join(hypo.split(' ')).lower()
    for hyper in train_hyper_lines[ndx].strip().split("\t"):
        hyper_st = '_'.join(hyper.split(' ')).lower()
        train_data.write(hypo + "\t" + hyper_st + "\n")
train_data.close()

test_data = open(OUT_TEST_FILENAME, "w")
for ndx, hypo in tqdm(enumerate(test_hypo_lines)):
    hypo = hypo.strip().split("\t")[0]
    hypo = "_".join(hypo.split(' ')).lower()
    test_data.write(hypo + "\n")
test_data.close()

test_targets = open(OUT_TARGETS_FILENAME, "w")
# for ndx, hypo in tqdm(enumerate(test_hypo_lines)):
#     hypo = hypo.strip()
#     hypo = hypo.split("\t")[0]
#     hypo = '_'.join(hypo.split(' '))
#     for hyper in test_hyper_lines[ndx].split("\t"):
#         hyper_st = ""
#         for hyp in hyper.strip().split('\t'):
#             hyper_st += '_'.join(hyp.split(' '))
#         test_targets.write(hypo + "\t" + hyper_st + "\n")
# test_targets.close()

for ndx, hypo in tqdm(enumerate(test_hypo_lines)):
    hypo = hypo.strip()
    hypo = hypo.split("\t")[0]
    hypo = '_'.join(hypo.split(' ')).lower()
    hyper_st = ""
    for hyper in test_hyper_lines[ndx].strip().split("\t"):
        hyper_st += '_'.join(hyper.split(' ')).lower()
        hyper_st += "\t"
    test_targets.write(hypo + "\t" + hyper_st + "\n")
test_targets.close()
